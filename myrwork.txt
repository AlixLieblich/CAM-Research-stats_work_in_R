this is when i learned: data import, subsetting data, taking a mean, adding a column, and conducting a t test



R version 4.0.2 (2020-06-22) -- "Taking Off Again"Copyright (C) 2020 The R Foundation for Statistical ComputingPlatform: x86_64-apple-darwin17.0 (64-bit)R is free software and comes with ABSOLUTELY NO WARRANTY.You are welcome to redistribute it under certain conditions.Type 'license()' or 'licence()' for distribution details.  Natural language support but running in an English localeR is a collaborative project with many contributors.Type 'contributors()' for more information and'citation()' on how to cite R or R packages in publications.Type 'demo()' for some demos, 'help()' for on-line help, or'help.start()' for an HTML browser interface to help.Type 'q()' to quit R.> import(tidyverse)Error in import(tidyverse) : could not find function "import"> library(tidyverse)── Attaching packages ──────────────────────────────────────── tidyverse 1.3.0 ──✓ ggplot2 3.3.2     ✓ purrr   0.3.4✓ tibble  3.0.2     ✓ dplyr   1.0.0✓ tidyr   1.1.0     ✓ stringr 1.4.0✓ readr   1.3.1     ✓ forcats 0.5.0── Conflicts ─────────────────────────────────────────── tidyverse_conflicts() ──x dplyr::filter() masks stats::filter()x dplyr::lag()    masks stats::lag()> anatomy <- read_csv("anatomyMeasures.csv")Parsed with column specification:cols(  number = col_double(),  step = col_double(),  `thick1 (_m)` = col_double(),  `thick2(_m)` = col_double(),  `thick3(_m)` = col_double(),  `avg.cell.1 (_m2)` = col_double(),  description = col_character(),  `avg.cell.2 (_m2)` = col_double(),  description_1 = col_character(),  IAS = col_character(),  IAS_1 = col_double(),  IAS_2 = col_double(),  IAS_3 = col_double(),  Genus = col_character(),  Photo = col_character(),  X16 = col_logical())Warning messages:1: Missing column names filled in: 'X16' [16] 2: Duplicated column names deduplicated: 'description' => 'description_1' [9], 'IAS' => 'IAS_1' [11], 'IAS' => 'IAS_2' [12], 'IAS' => 'IAS_3' [13] > columns(anatomy)Error in columns(anatomy) : could not find function "columns"> colnames(anatomy) [1] "number"           "step"             "thick1 (_m)"      "thick2(_m)"       [5] "thick3(_m)"       "avg.cell.1 (_m2)" "description"      "avg.cell.2 (_m2)" [9] "description_1"    "IAS"              "IAS_1"            "IAS_2"           [13] "IAS_3"            "Genus"            "Photo"            "X16"             > myvars <- c("Photo")> photoType <- anatomy("Photo")Error in anatomy("Photo") : could not find function "anatomy"> photoType <- anatomy[myvars]> myvars[1] "Photo"> myvars <- c("CAM")> photoTypeCam <- Photo[myvars]Error: object 'Photo' not found> photoTypeCam <- anatomy[myvars]Error: Can't subset columns that don't exist.x Column `CAM` doesn't exist.Run `rlang::last_error()` to see where the error occurred.> newdata <- anatomy[ which(anatomy$Photo=="CAM")]Error: Can't subset columns that don't exist.x Locations 17, 18, 19, 20, 21, etc. don't exist.ℹ There are only 16 columns.Run `rlang::last_error()` to see where the error occurred.> newdata <- anatomy[ which(anatomy$Photo==CAM)]Error in which(anatomy$Photo == CAM) : object 'CAM' not found> newdata <- anatomy[anatomy$Photo==CAM]Error in `[.tbl_df`(anatomy, anatomy$Photo == CAM) :   object 'CAM' not found> newdata <- anatomy[anatomy$Photo==C3]Error in `[.tbl_df`(anatomy, anatomy$Photo == C3) : object 'C3' not found> newdata <- anatomy[anatomy$Photo=='C3']Error: Must subset columns with a valid subscript vector.ℹ Logical subscripts must match the size of the indexed input.x Input has size 16 but subscript `anatomy$Photo == "C3"` has size 996.Run `rlang::last_error()` to see where the error occurred.> newdata <- anatomy[anatomy$photoType=='C3']Error: Must subset columns with a valid subscript vector.ℹ Logical subscripts must match the size of the indexed input.x Input has size 16 but subscript `anatomy$photoType == "C3"` has size 0.Run `rlang::last_error()` to see where the error occurred.In addition: Warning message:Unknown or uninitialised column: `photoType`. > newdata <- anatomy[anatomy$'photoType'=='C3']Error: Must subset columns with a valid subscript vector.ℹ Logical subscripts must match the size of the indexed input.x Input has size 16 but subscript `anatomy$photoType == "C3"` has size 0.Run `rlang::last_error()` to see where the error occurred.In addition: Warning message:Unknown or uninitialised column: `photoType`. > newdata <- anatomy[anatomy$"photoType"=='C3']Error: Must subset columns with a valid subscript vector.ℹ Logical subscripts must match the size of the indexed input.x Input has size 16 but subscript `anatomy$photoType == "C3"` has size 0.Run `rlang::last_error()` to see where the error occurred.In addition: Warning message:Unknown or uninitialised column: `photoType`. > photoType# A tibble: 996 x 1   Photo   <chr> 1 CAM   2 CAM   3 CAM   4 CAM   5 CAM   6 CAM   7 CAM   8 CAM   9 CAM  10 CAM  # … with 986 more rows> lsfunction (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,     pattern, sorted = TRUE) {    if (!missing(name)) {        pos <- tryCatch(name, error = function(e) e)        if (inherits(pos, "error")) {            name <- substitute(name)            if (!is.character(name))                 name <- deparse(name)            warning(gettextf("%s converted to character string",                 sQuote(name)), domain = NA)            pos <- name        }    }    all.names <- .Internal(ls(envir, all.names, sorted))    if (!missing(pattern)) {        if ((ll <- length(grep("[", pattern, fixed = TRUE))) &&             ll != length(grep("]", pattern, fixed = TRUE))) {            if (pattern == "[") {                pattern <- "\\["                warning("replaced regular expression pattern '[' by  '\\\\['")            }            else if (length(grep("[^\\\\]\\[<-", pattern))) {                pattern <- sub("\\[<-", "\\\\\\[<-", pattern)                warning("replaced '[<-' by '\\\\[<-' in regular expression pattern")            }        }        grep(pattern, all.names, value = TRUE)    }    else all.names}<bytecode: 0x7f80bbf8d538><environment: namespace:base>> ls(photoType)[1] "Photo"> ls("Photo")Error in as.environment(pos) : no item called "Photo" on the search list> ls(Photo)Error in as.environment(pos) : no item called "Photo" on the search listIn addition: Warning message:In ls(Photo) : ‘Photo’ converted to character string> photoType# A tibble: 996 x 1   Photo   <chr> 1 CAM   2 CAM   3 CAM   4 CAM   5 CAM   6 CAM   7 CAM   8 CAM   9 CAM  10 CAM  # … with 986 more rows> ls()[1] "anatomy"   "myvars"    "photoType"> ls("photoType")Error in as.environment(pos) :   no item called "photoType" on the search list> photoType(x = 996:1)Error in photoType(x = 996:1) : could not find function "photoType"> newdata <- subset(anatomy, select=c(Photo))> View(anatomy)> View(photoType)> Measurements <- anatomy[1:229]Error: Can't subset columns that don't exist.x Locations 17, 18, 19, 20, 21, etc. don't exist.ℹ There are only 16 columns.Run `rlang::last_error()` to see where the error occurred.> Measurements <- anatomy[229:1]Error: Can't subset columns that don't exist.x Locations 229, 228, 227, 226, 225, etc. don't exist.ℹ There are only 16 columns.Run `rlang::last_error()` to see where the error occurred.> Measurements <- anatomy[1:229,]> View(Measurements)> Measurements <- anatomy[1:74,]> > myvars <- c("Photo")Error: unexpected '>' in ">"> > photoType <- anatomy("Photo")Error: unexpected '>' in ">"> > myvars <- c("Photo") photoType <- anatomy("Photo")Error: unexpected '>' in ">"> myvars <- c("Photo")> photoType <- anatomy("Photo")Error in anatomy("Photo") : could not find function "anatomy"> photoType <- Measurements("Photo")Error in Measurements("Photo") : could not find function "Measurements"> photoType <- Measurements$Photo> photoType [1] "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM"[14] "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" "CAM"[27] "CAM" "C3"  "C3"  "CAM" "CAM" "CAM" "CAM" "CAM" "CAM" NA    "CAM" "CAM" "CAM"[40] NA    NA    NA    "C3"  NA    NA    NA    NA    "C3"  "C3"  "C3"  "C3"  "C3" [53] "CAM" NA    "CAM" "C3"  "C3"  NA    NA    NA    NA    NA    "C3"  "C3"  "CAM"[66] "CAM" NA    NA    "C3"  "C3"  "C3"  "C3"  "C3"  "C3" > subset(df, Photo=="CAM")Error in subset.default(df, Photo == "CAM") : object 'Photo' not found> subset(Measurements, Photo=="CAM")# A tibble: 40 x 16   number  step `thick1 (_m)` `thick2(_m)` `thick3(_m)` `avg.cell.1 (_m…    <dbl> <dbl>         <dbl>        <dbl>        <dbl>            <dbl> 1      3     1         1688.        1698.        1665.             263. 2      5     2          389.         570.         405.             121. 3      6     2          351.         540.         381.             126  4      7     1          709.        1168.         531.             212. 5      9     1         1084.        1141.        1082.             678. 6      8     3         1060         1151.        1190              560. 7     13     2          854.        1152.         429.             187. 8     14     2          691.         702.         906.             385. 9     16     2         1070.        1048.        1031.             333.10     17     1         1423.        1400         1297.             342.# … with 30 more rows, and 10 more variables: description <chr>, `avg.cell.2#   (_m2)` <dbl>, description_1 <chr>, IAS <chr>, IAS_1 <dbl>, IAS_2 <dbl>,#   IAS_3 <dbl>, Genus <chr>, Photo <chr>, X16 <lgl>> CAM_subset <- subset(Measurements, Photo=="CAM")> C3subset <- subset(Measurements, Photo=="C3")> meanThick<-rowMeans(Measurements[,3:5])> df$meanThick<-meanError in df$meanThick <- mean :   object of type 'closure' is not subsettable> Measurements$meanThickness<-meanThick> meanAvCell<-rowMeans(Measurements[,6:7])Error in rowMeans(Measurements[, 6:7]) : 'x' must be numeric> meanAvCell<-rowMeans(Measurements[,6:8])Error in rowMeans(Measurements[, 6:8]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[,6:7])Error in rowMeans(Measurements[, 6:7]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[, 6:7])Error in rowMeans(Measurements[, 6:7]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[,3:5])> meanCell<-rowMeans(Measurements[,3:5])> meanCell<-rowMeans(Measurements[,6,7])Error in rowMeans(Measurements[, 6, 7]) :   'x' must be an array of at least two dimensions> meanCell<-rowMeans(Measurements[,6,:7, -5])Error: unexpected ':' in "meanCell<-rowMeans(Measurements[,6,:"> meanCell<-rowMeans(Measurements[c(6,7), ]+ )Error in rowMeans(Measurements[c(6, 7), ]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[c(7,8), ])Error in rowMeans(Measurements[c(7, 8), ]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[c(6,8), ])Error in rowMeans(Measurements[c(6, 8), ]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[c(5,7), ])Error in rowMeans(Measurements[c(5, 7), ]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[dat(5,7), ])Error in dat(5, 7) : could not find function "dat"> meanCell<-rowMeans(Measurements[(5,7), ])Error: unexpected ',' in "meanCell<-rowMeans(Measurements[(5,"> meanCell<-rowMeans(Measurements[c(5,7),])Error in rowMeans(Measurements[c(5, 7), ]) : 'x' must be numeric> > meanCell<-rowMeans(Measurements[, c(5,7),])Error in rowMeans(Measurements[, c(5, 7), ]) : 'x' must be numeric> meanCell<-rowMeans(Measurements[, c(6,8),])> Measurements$meanCellSize<-meanCellSizeError: object 'meanCellSize' not found> > Measurements$meanCellSize<-meanCell> t.test(17,18)Error in t.test.default(17, 18) : not enough 'x' observations> CAM_subset# A tibble: 40 x 16   number  step `thick1 (_m)` `thick2(_m)` `thick3(_m)` `avg.cell.1 (_m…    <dbl> <dbl>         <dbl>        <dbl>        <dbl>            <dbl> 1      3     1         1688.        1698.        1665.             263. 2      5     2          389.         570.         405.             121. 3      6     2          351.         540.         381.             126  4      7     1          709.        1168.         531.             212. 5      9     1         1084.        1141.        1082.             678. 6      8     3         1060         1151.        1190              560. 7     13     2          854.        1152.         429.             187. 8     14     2          691.         702.         906.             385. 9     16     2         1070.        1048.        1031.             333.10     17     1         1423.        1400         1297.             342.# … with 30 more rows, and 10 more variables: description <chr>, `avg.cell.2#   (_m2)` <dbl>, description_1 <chr>, IAS <chr>, IAS_1 <dbl>, IAS_2 <dbl>,#   IAS_3 <dbl>, Genus <chr>, Photo <chr>, X16 <lgl>> C3subset# A tibble: 18 x 16   number  step `thick1 (_m)` `thick2(_m)` `thick3(_m)` `avg.cell.1 (_m…    <dbl> <dbl>         <dbl>        <dbl>        <dbl>            <dbl> 1     40     1         858.         616.         293.             170.  2     41     2         452.         740.         328.             240.  3     80     3         343.         747.         272.             132.  4    174     3         297.         514.         324.              65.6 5    175     3         358.         384.         746.             156.  6    176     3         183.         275.         213.              52.2 7    177     3         327.         869.         365.              90.2 8    178     1         698.         980.         296.              54.6 9    188     3         591.         957.         601.              73.110    189     1         315.         540.         254.              45.011    198     1         238.         232.         198.              65.112    200     3         349.         587.         275.              48.013    222     1          61.1         44.9         60.4             18.114    224     1         116.         170.         108.             167. 15    225     1         102.         102.         102.             192. 16    226     1         117.          90.2         88.0            155. 17    227     1          84.5        115.          89.8            107. 18    229     1          72.4         71.9        106.             136. # … with 10 more variables: description <chr>, `avg.cell.2 (_m2)` <dbl>,#   description_1 <chr>, IAS <chr>, IAS_1 <dbl>, IAS_2 <dbl>, IAS_3 <dbl>,#   Genus <chr>, Photo <chr>, X16 <lgl>> meanThicknessC3Subset <- subset(C3subset, meanThickness)Error in eval(e, x, parent.frame()) : object 'meanThickness' not found> C3_subset <- subset(Measurements, Photo=="C3")> meanThicknessC3Subset <- subset(C3_subset, meanThickness)Error in subset.data.frame(C3_subset, meanThickness) :   'subset' must be logical> meanThicknessC3Subset <- subset(C3_subset, "meanThickness")Error in subset.data.frame(C3_subset, "meanThickness") :   'subset' must be logical> meanThicknessC3Subset <- subset(C3_subset, "meanCellSize")Error in subset.data.frame(C3_subset, "meanCellSize") :   'subset' must be logical> meanThicknessC3Subset <- subset(C3_subset, meanCellSize)Error in subset.data.frame(C3_subset, meanCellSize) :   'subset' must be logical> meanThicknessC3Subset <- subset[C3_subset, meanCellSize, drop=FALSE]Error: object 'meanCellSize' not found> meanThicknessC3Subset <- subset[C3_subset, meanCellSize=="341.9176", drop=FALSE]Error: object 'meanCellSize' not found> meanThicknessC3Subset <- subset[C3_subset, Photo, drop=FALSE]Error: object 'Photo' not found> C3MeanThick <- subset(C3_subset, meanThickness)Error in subset.data.frame(C3_subset, meanThickness) :   'subset' must be logical> > meanThicknessC3Subset <- subset[C3_subset, meanCellSize=="341.9176", drop=FALSE]Error: object 'meanCellSize' not found> meanThicknessC3Subset <- subset(C3_subset, meanThickness)Error in subset.data.frame(C3_subset, meanThickness) :   'subset' must be logical> > > practiceSubset <- subset(Measurements, meanThickness)Error in subset.data.frame(Measurements, meanThickness) :   'subset' must be logical> practiceSubset <- subset(Measurements, Photo=="CAM")> practiceSubset <- subset(Measurements, meanCellSize=="341.9176")> meanThicknessC3Subset <- subset(C3_subset, meanThickness>1)> CAM_subset <- subset(Measurements, Photo=="CAM")> meanThicknessCAMSubset <- subset(CAM_subset, meanThickness>1)> t.test(meanThicknessC3Subset, meanThicknessCAMSubset)Error: Can't combine `number` <double> and `description` <character>.Run `rlang::last_error()` to see where the error occurred.> bind_rows(meanThicknessC3Subset, meanThicknessCAMSubset)# A tibble: 58 x 18   number  step `thick1 (_m)` `thick2(_m)` `thick3(_m)` `avg.cell.1 (_m…    <dbl> <dbl>         <dbl>        <dbl>        <dbl>            <dbl> 1     40     1          858.         616.         293.            170.  2     41     2          452.         740.         328.            240.  3     80     3          343.         747.         272.            132.  4    174     3          297.         514.         324.             65.6 5    175     3          358.         384.         746.            156.  6    176     3          183.         275.         213.             52.2 7    177     3          327.         869.         365.             90.2 8    178     1          698.         980.         296.             54.6 9    188     3          591.         957.         601.             73.110    189     1          315.         540.         254.             45.0# … with 48 more rows, and 12 more variables: description <chr>, `avg.cell.2#   (_m2)` <dbl>, description_1 <chr>, IAS <chr>, IAS_1 <dbl>, IAS_2 <dbl>,#   IAS_3 <dbl>, Genus <chr>, Photo <chr>, X16 <lgl>, meanThickness <dbl>,#   meanCellSize <dbl>> t.test(meanThicknessC3Subset, meanThicknessCAMSubset)Error: Can't combine `number` <double> and `description` <character>.Run `rlang::last_error()` to see where the error occurred.> t.test(meanThicknessC3Subset, meanThicknessCAMSubset, paired = TRUE)Error in complete.cases(x, y) : not all arguments have the same length> meanThicknessC3Subset# A tibble: 18 x 18   number  step `thick1 (_m)` `thick2(_m)` `thick3(_m)` `avg.cell.1 (_m…    <dbl> <dbl>         <dbl>        <dbl>        <dbl>            <dbl> 1     40     1         858.         616.         293.             170.  2     41     2         452.         740.         328.             240.  3     80     3         343.         747.         272.             132.  4    174     3         297.         514.         324.              65.6 5    175     3         358.         384.         746.             156.  6    176     3         183.         275.         213.              52.2 7    177     3         327.         869.         365.              90.2 8    178     1         698.         980.         296.              54.6 9    188     3         591.         957.         601.              73.110    189     1         315.         540.         254.              45.011    198     1         238.         232.         198.              65.112    200     3         349.         587.         275.              48.013    222     1          61.1         44.9         60.4             18.114    224     1         116.         170.         108.             167. 15    225     1         102.         102.         102.             192. 16    226     1         117.          90.2         88.0            155. 17    227     1          84.5        115.          89.8            107. 18    229     1          72.4         71.9        106.             136. # … with 12 more variables: description <chr>, `avg.cell.2 (_m2)` <dbl>,#   description_1 <chr>, IAS <chr>, IAS_1 <dbl>, IAS_2 <dbl>, IAS_3 <dbl>,#   Genus <chr>, Photo <chr>, X16 <lgl>, meanThickness <dbl>, meanCellSize <dbl>> Measurements$MeanThicknessC3Subset <- meanThicknessC3SubsetError: Assigned data `meanThicknessC3Subset` must be compatible with existing data.x Existing data has 74 rows.x Assigned data has 18 rows.ℹ Only vectors of size 1 are recycled.Run `rlang::last_error()` to see where the error occurred.> t.test(meanThicknessC3Subset$meanThickness, meanThicknesCAMSubset$meanThickness)Error in t.test.default(meanThicknessC3Subset$meanThickness, meanThicknesCAMSubset$meanThickness) :   object 'meanThicknesCAMSubset' not found> View(meanThicknessCAMSubset)> t.test(meanThicknessC3Subset$meanThickness, meanThicknessCAMSubset$meanThickness)	Welch Two Sample t-testdata:  meanThicknessC3Subset$meanThickness and meanThicknessCAMSubset$meanThicknesst = -7.5621, df = 51.062, p-value = 7.015e-10alternative hypothesis: true difference in means is not equal to 095 percent confidence interval: -732.6721 -425.2709sample estimates:mean of x mean of y  339.1561  918.1276 > t.test(meanThicknessC3Subset$meanCellSize, meanThicknessCAMSubset$meanCellSize)	Welch Two Sample t-testdata:  meanThicknessC3Subset$meanCellSize and meanThicknessCAMSubset$meanCellSizet = -5.8252, df = 54.491, p-value = 3.161e-07alternative hypothesis: true difference in means is not equal to 095 percent confidence interval: -232.4210 -113.4179sample estimates:mean of x mean of y  107.5204  280.4399 > meanIAS<-rowMeans(Measurements[, 10:13])Error in rowMeans(Measurements[, 10:13]) : 'x' must be numeric> > meanIAS<-rowMeans(Measurements[, 11:14])Error in rowMeans(Measurements[, 11:14]) : 'x' must be numeric> > View(Measurements)> meanIAS<-rowMeans(Measurements[, 12:15])Error in rowMeans(Measurements[, 12:15]) : 'x' must be numeric> > meanIAS<-rowMeans(Measurements[, 9:12])Error in rowMeans(Measurements[, 9:12]) : 'x' must be numeric